function h=jvAddCurrentSourceDensity(h)
% jvAddCurrentSourceDensity addpanel function
% 
% Example:
% h=jvAddCurrentSourceDensity(h)
%
% -------------------------------------------------------------------------
% Author: Malcolm Lidierth 11/07
% Copyright © The Author & King's College London 2007-
% -------------------------------------------------------------------------


Height=0.09;
Top=0.75;

h=jvAddPanel(h, 'Title', 'Details',...
    'dimension', 0.6);



h=jvElement(h{end},'Component', 'javax.swing.JComboBox',...
    'Position',[0.1 Top 0.8 Height],...
    'DisplayList', {'0.1' '0.2' '0.5' '1.0' '2.0'},...
    'Label', 'Duration(s)',...
    'ToolTipText', 'Duraion of average (s)');

h=jvElement(h{end},'Component', 'javax.swing.JComboBox',...
    'Position',[0.1 Top-(2*Height) 0.8 Height],...
    'DisplayList', {'0' '10' '20' '50'},...
    'ReturnValues', {0 10 20 50},...
    'Label', 'PreTime(%)',...
    'ToolTipText', 'Pre-trigger time');


h=jvElement(h{end},'Component', 'javax.swing.JComboBox',...
    'Position',[0.1 Top-(4*Height) 0.8 Height],...
    'DisplayList', {'10' '20' '50' '100'},...
    'ReturnValues', {10 20 50 100},...
    'Label', 'Sweeps per average',...
    'ToolTipText', 'Number of sweeps in each average');

h=jvElement(h{end},'Component', 'javax.swing.JComboBox',...
    'Position',[0.1 Top-(6*Height) 0.8 Height],...
    'DisplayList', {'1' '10' '20' '50'},...
    'ReturnValues', {1 10 20 50},...
    'Label', 'Spacing (µm)',...
    'ToolTipText', 'Spacing between recording points. Constant or list');

h=jvElement(h{end},'Component', 'javax.swing.JComboBox',...
    'Position',[0.51 Top-(8*Height) 0.45 Height],...
    'DisplayList', {'Mean' 'Median'},...
    'Label', 'Method',...
    'ToolTipText', 'Averaging method');

h=jvElement(h{end},'Component', 'javax.swing.JCheckBox',...
    'Position',[0.03 Top-(7*Height) 0.48 Height],...
    'Label', 'Retrigger',...
    'ToolTipText', 'Use triggers falling within a sweep');

h=jvElement(h{end},'Component', 'javax.swing.JCheckBox',...
    'Position',[0.03 Top-(8*Height) 0.48 Height],...
    'Label', 'Subtract DC',...
    'ToolTipText', 'Remove pre-trigger DC level from result');

set(h{1}.ChannelB, 'ActionPerformedCallback', {@SetMaxDuration h{1}.ChannelA h{2}.Duration});

return
end


function SetMaxDuration(hObject, EventData, chanA, Dur)
listA=jvGetControlValue(chanA);
listB=jvGetControlValue(hObject);
if isempty(listA) || listA(1)==0
    return
end
fhandle=ancestor(hObject.hghandle, 'figure');
channels=getappdata(fhandle, 'channels');
trig=getPhysicalTriggers(channels{listA(1)},0, scMaxTime(fhandle));

if ~isempty(trig)
    duration=Inf;
    for k=1:length(listB)
        if size(channels{listB(k)}.adc, 2)>1
        epochs=findValidEpochs(channels{listB(k)}, trig);
        temp=trig(epochs>0);
        epochs=epochs(epochs>0);
        duration=min([duration; (channels{listB(k)}.tim(epochs, end)-temp)*channels{listB(k)}.tim.Units]);
        end
    end
    if duration==Inf
        duration=0.1;
    end
    Dur.setSelectedItem(sprintf('%f',duration));
end
clear('channels');
return
end