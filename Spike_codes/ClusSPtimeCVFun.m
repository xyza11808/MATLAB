function [ClusWithinWinCount,CLusWithWinSPtime] = ClusSPtimeCVFun(cClus1_SPtimes, cClus2_SPtimes, NerSPWin)

MergedSPtimes = [cClus1_SPtimes;cClus2_SPtimes];
MergedSP_clusInds = [zeros(numel(cClus1_SPtimes),1);...
    ones(numel(cClus2_SPtimes),1)];
[SortSPtimes, SortInds] = sort(MergedSPtimes);
Sort_clusInds = MergedSP_clusInds(SortInds);

SPtime_diff = diff(SortSPtimes);
SPIndex_diff = diff(Sort_clusInds);
ClusWithinWinCount = zeros(numel(NerSPWin),4);
CLusWithWinSPtime = cell(numel(NerSPWin),4);
for cSPWin = 1 : numel(NerSPWin)
    Clus1_2_Clus2_withinWinInds = ((NerSPWin(cSPWin)) > SPtime_diff &...
         SPIndex_diff == 1);
    Clus2_2_Clus1_withinWinInds = ((NerSPWin(cSPWin)) > SPtime_diff &...
         SPIndex_diff == -1);
    Clus1_2Self_withinInds = (SPtime_diff < NerSPWin(cSPWin) &...
        SPIndex_diff == 0 & Sort_clusInds(2:end) == 0);
    Clus2_2Self_withinInds = (SPtime_diff < NerSPWin(cSPWin) &...
        SPIndex_diff == 0 & Sort_clusInds(2:end) == 1);
    ClusWithinWinCount(cSPWin,:) = [sum(Clus1_2_Clus2_withinWinInds),...
        sum(Clus2_2_Clus1_withinWinInds),sum(Clus1_2Self_withinInds),...
        sum(Clus2_2Self_withinInds)];
    CLusWithWinSPtime(cSPWin,:) = {[SortSPtimes(Clus1_2_Clus2_withinWinInds),...
        Sort_clusInds(Clus1_2_Clus2_withinWinInds)],...
        [SortSPtimes(Clus2_2_Clus1_withinWinInds),Sort_clusInds(Clus2_2_Clus1_withinWinInds)],...
        [SortSPtimes(Clus1_2Self_withinInds),Sort_clusInds(Clus1_2Self_withinInds)],...
        [SortSPtimes(Clus2_2Self_withinInds),Sort_clusInds(Clus2_2Self_withinInds)]};
end


