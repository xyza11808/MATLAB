%compare performance detection. loads resTable_*.mat files generated by mainSimulatedEval.m
%

basepath='/home/urut/precomputed/';
prefix='resTable';

simNr=6;
parameterSets=[1 2];

for i=1:2
    load([basepath prefix '_' num2str(simNr) '_' num2str(parameterSets(i))  '.mat'], 'resTable');

    allRes{i} = resTable;
    
end

noiseLevels=1:4;
n=size(allRes{1},1)-3;  %nr clusters

figure(2);

for j=1:2
    subplot(2,3,1+(j-1)*3)
    fromInd=2;
    plot( noiseLevels, allRes{1}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'r.-', noiseLevels, allRes{2}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'bx-');
    legend('WDM','PDM');
    title(['sim' num2str(simNr) ' detected']);
    if j==1
        ylabel('nr spikes');
    else
        ylabel('% of assigned');
    end

    subplot(2,3,2+(j-1)*3)
    fromInd=6;
    plot( noiseLevels, allRes{1}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'r.-', noiseLevels, allRes{2}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'bx-');
    legend('WDM','PDM');
    title(['sim' num2str(simNr) ' TP']);
    if j==1
        ylabel('nr spikes');
    else
        ylabel('% of assigned');
    end


    subplot(2,3,3+(j-1)*3)
    fromInd=10;
    plot( noiseLevels, allRes{1}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'r.-', noiseLevels, allRes{2}(n+j,fromInd:length(noiseLevels)+fromInd-1), 'bx-');
    legend('WDM','PDM');
    title(['sim' num2str(simNr) ' FP']);
    if j==1
        ylabel('nr spikes');
    else
        ylabel('% of assigned');
    end

end